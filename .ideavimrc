" ============================================================================
" Emulated plugins
" ============================================================================
" https://github.com/JetBrains/ideavim/blob/master/doc/emulated-plugins.md
set exchange
" Emulates vim-exchange: https://github.com/tommcdo/vim-exchange
" Commands: cx, cxx, X, cxc

set surround
" Emulates vim-surround: https://github.com/tpope/vim-surround
" Commands: ys, cs, ds, S

set multiple-cursors
" Emulates vim-multiple-cursors: https://github.com/terryma/vim-multiple-cursors
" Commands: <A-n>, <A-x>, <A-p>, g<A-n>

set commentary
" Emulates commentary.vim: https://github.com/tpope/vim-commentary
" Commands: gcc, gc + motion, v_gc

set argtextobj
" Emulates argtextobj.vim: https://www.vim.org/scripts/script.php?script_id=2699
" Additional text objects: aa, ia

set highlightedyank
" Emulates vim-highlightedyank: https://github.com/machakann/vim-highlightedyank

" ============================================================================
" Set commands
" ============================================================================
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

" Integrate with system clipboard
" set clipboard=unnamedplus,unnamed
" Add ideaput to clipboard option to perform a put via the IDE
" set clipboard+=ideaput
set clipboard=unnamedplus,unnamed,ideaput
" If set, creation of global mark will trigger creation of IDE's bookmark and vice versa.
set ideamarks
" If set, join command will be performed via IDE
set ideajoin

" The ":substitute" flag 'g' is default on
" the ":substitute" flag 'g' is by default
" No need to add g at the end substitution command
" set gdefault

" Highlight matches with the current search pattern
set hlsearch

" Ignore case when searching
set ignorecase

" Makes search act like search in modern browsers
" Show where search pattern typed so far matches
set incsearch

" Pairs of characters that "%" can match
set matchpairs=(:),[:],{:},<:>

" number formats recognized for CTRL-A command
set nrformats+=alpha
set nrformats-=octal

" Use hybrid (absolute and relative) numbers
set number relativenumber

" message on status line to show current mode
set showmode

" When searching try to be smart about cases
set smartcase

" time that is waited for a mapped key sequence
set timeoutlen=500

" use visual bell instead of beeping
set visualbell

" searches wrap around the end of the file
set wrapscan

" ============================================================================
" IDE actions
" ============================================================================

nnoremap ga :action GotoAction<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gf :action GotoFile<CR>
" go is normally like gg,
" instead remap go as Go to Class
" Mnemonic: 'Go Object'
nnoremap go :action GotoClass<CR>
nnoremap gr :action GotoRelated<CR>
nnoremap gs :action GotoSymbol<CR>

nnoremap g; :action JumpToLastChange<CR>
nnoremap g, :action JumpToNextChange<CR>

" unimpaired-style mappings
nnoremap [<Space> O<Esc>j
nnoremap ]<Space> o<Esc>k
nnoremap ]b :action GotoNextBookmark<CR>
nnoremap [b :action GotoPreviousBookmark<CR>
nnoremap [c :action VcsShowPrevChangeMarker<CR>
nnoremap ]c :action VcsShowNextChangeMarker<CR>
nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>
nnoremap ]m :action MethodDown<CR>
nnoremap [m :action MethodUp<CR>
nnoremap ]o :action SelectNextOccurrence<CR>
nnoremap [o :action SelectPreviousOccurrence<CR>
nnoremap ]u :action GotoNextElementUnderCaretUsage<CR>
nnoremap [u :action GotoPrevElementUnderCaretUsage<CR>
nnoremap ]p :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorOnlyLayoutChangeAction<CR>
nnoremap [p :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorAndPreviewLayoutChangeAction<CR>
nnoremap ]P :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorOnlyLayoutChangeAction<CR>
nnoremap [P :action org.intellij.plugins.markdown.ui.actions.editorLayout.PreviewOnlyLayoutChangeAction<CR>
" Listed by Active Editor (EditorToggleActions)
nnoremap yob :action EditorToggleShowBreadcrumbs<CR>
nnoremap yod :action ToggleDistractionFreeMode<CR>
nnoremap yog :action EditorToggleShowGutterIcons<CR>
nnoremap yoi :action EditorToggleShowIndentLines<CR>
nnoremap yon :action EditorToggleShowLineNumbers<CR>
nnoremap yop :action TogglePresentationMode<CR>
nnoremap yos :action ViewStatusBar<CR>
nnoremap yot :action ViewToolBar<CR>
nnoremap yow :action EditorToggleUseSoftWraps<CR>
nnoremap yoz :action ToggleZenMode<CR>

" Backslash as leader key mappings
" Instead of ActivateCommitToolWindow, use Cmd+k and Cmd+w
" Set up external tool "black":
" https://black.readthedocs.io/en/stable/editor_integration.html
" Arguments: "$FilePath$" -l 79
nmap <space> <leader>
nnoremap <leader>a :action EditorActions<CR>
nnoremap <leader>b :action Tool_External Tools_Black<CR>
nnoremap <leader>c :action SilentCodeCleanup<CR>
nnoremap <leader>d :action ActivateDatabaseToolWindow<CR>
nnoremap <leader>e :action ActivateEventLogToolWindow<CR>
nnoremap <leader>f :action RenameFile<CR>
nnoremap <leader>g :action EditorPopupMenu.GoTo<CR>
nnoremap <leader>h :action LocalHistory.ShowHistory<CR>
nnoremap <leader>i :action GotoImplementation<CR>
nnoremap <leader>j :action JumpToLastWindow<CR>
nnoremap <leader>k :action Help.KeymapReference<CR>
" Reformat Code is M-A-L
nnoremap <leader>l :action ReformatCode<CR>
nnoremap <leader>m :action Move<CR>
nnoremap <leader>n :action ShowNavBar<CR>
nnoremap <leader>o :action OptimizeImports<CR>
nnoremap <leader>p :action ActivatePythonConsoleToolWindow<CR>
nnoremap <leader>q :action CloseProject<CR>
nnoremap <leader>r :action ActivateRConsoleToolWindow<CR>
nnoremap <leader>s :action ActivateSciViewToolWindow<CR>
nnoremap <leader>t :action ActivateTerminalToolWindow<CR>
nnoremap <leader>u :action FindUsagesInFile<CR>
" Introduce Variable is M-A-V
nnoremap <leader>v :action IntroduceVariable<CR>
nnoremap <leader>w :action HideAllWindows<CR>
nnoremap <leader>x :action ChangeSplitOrientation<CR>
" Reload All from Disk is M-A-Y
nnoremap <leader>y :action Synchronize<CR>
" Rollback is M-A-Z
nnoremap <leader>z :action Vcs.RollbackChangedLines<CR>
" Clear search highlighting when hitting backslash twice
nnoremap <leader><leader> :nohlsearch<CR>

" These work, you just have to do the combo very fast
nnoremap <c-w>+ :action StretchSplitToBottom<CR>
nnoremap <c-w>- :action StretchSplitToTop<CR>
nnoremap <c-w>> :action StretchSplitToRight<CR>
nnoremap <c-w>< :action StretchSplitToLeft<CR>
" <C-t> = Refactor this... now only works in normal mode
" so <C-t> can indent line in insert mode
nnoremap <C-t> :action Refactorings.QuickListPopupAction<CR>

" Emacs and bash style insert mode CTRL shortcuts
" <C-a> = Move to start of the line; like in vim command mode: c_ctrl-b; To insert previously inserted text, use <C-r>. or <Alt-.> (below)
inoremap <C-a> <Home>
" <C-b> = Move one character backward
inoremap <C-b> <Left>
" <C-d> = Delete one character forward; the opposite of <C-h>
inoremap <C-d> <Delete>
" <C-e> = Move to end of the line; the opposite of <C-a>; already exists in command mode: c_ctrl-e
inoremap <C-e> <End>
" <C-f> = Move one character forward; the opposite of <C-b>
inoremap <C-f> <Right>
" <C-g> = Cancel completion
inoremap <silent><expr> <C-g> pumvisible() ? "\<C-e>" :  "<C-g>"
" <C-h> = Delete one character backward; the opposite of <C-d>; already exists in command mode: c_ctrl-h
" <C-k> = Delete to end of line; the opposite of <C-u>
inoremap <C-k> <C-o>:action EditorDeleteToLineEnd<CR>
" <C-n> = Complete word using matches that come next; the opposite of <C-p>
" inoremap <C-n> <C-o>:action HippieCompletion<CR>
" <C-p> = Complete word using previous matches; the opposite of <C-n>
" inoremap <C-p> <C-o>:action HippieBackwardCompletion<CR>
" <C-u> = Delete to start of line; the opposite of <C-k>; already exists in command mode: c_ctrl-u
" <C-w> = Delete word backward; opposite of <A-d>; same as <A-h>; already exists in command mode: c_ctrl-w
" <C-y> = Paste from system clipboard (not from killring like in bash/emacs)
inoremap <C-y> <C-r>+
" <C-_> = Undo like in bash/emacs (this works really well)
inoremap <C--> <C-o>u

" Emacs and bash style insert mode ALT shortcuts
" <A-b> = Move one word backward; opposite of <A-f>
inoremap <A-b> <S-Left>
" <A-c> = Capitalize letter and move forward
inoremap <A-c> <Esc>l~ea
" <A-d> = Delete word forward; opposite of <A-h> and <C-w>
inoremap <A-d> <C-o>:action EditorKillToWordEnd<CR>
" <A-f> = Move one word forward; opposite of <A-b>
inoremap <A-f> <S-Right>
" <A-h> = Delete word backward; opposite of <A-d>, same as <C-w>
inoremap <A-h> <C-w>
" <A-j> = Move down; opposite of <A-k>
inoremap <A-j> <Down>
" <A-k> = Move up; opposite of <A-j>
inoremap <A-k> <Up>
" <A-l> = Lowercase to word end; opposite of <A-u> (works)
inoremap <A-l> <Esc>gueea
" <A-t> = Swap current word with previous word (works)
inoremap <A-t> <Esc>diwbPldepa
" <A-u> = Uppercase to WORD end; opposite of <A-l> (does not work)
inoremap <A-u> <Esc>gUeea
" " <A-.> = Insert previously inserted text (if any)
inoremap <A-.> <Esc>a<C-r>.
cnoremap <A-.> <C-r>.
" " <A--> = Undo
inoremap <A--> <Esc>ugi
" inoremap <A--> <C-o>u

" Multiple cursors mappings
inoremap <A-j> <C-o>:action EditorCloneCaretBelow<CR>
inoremap <A-k> <C-o>:action EditorCloneCaretAbove<CR>

" Press space in normal mode to run paragraph in console
" nnoremap <space> vap:action ExecuteInPyConsoleAction<CR>
" vnoremap <space> :action ExecuteInPyConsoleAction<CR>
