" ============================================================================
" Emulated plugins
" ============================================================================
" https://github.com/JetBrains/ideavim
set surround
" Commands: ys, cs, ds, S

set multiple-cursors
" Commands: <A-n>, <A-x>, <A-p>, g<A-n>

set commentary
" Emulates commentary.vim
" Commands: gcc, gc + motion, v_gc

" ============================================================================
" Set commands
" ============================================================================
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

" Integrate with system clipboard
" set clipboard=unnamedplus,unnamed
" Add ideaput to clipboard option to perform a put via the IDE
" set clipboard+=ideaput
set clipboard=unnamedplus,unnamed,ideaput
" If set, creation of global mark will trigger creation of IDE's bookmark and vice versa.
set ideamarks
" If set, join command will be performed via IDE
set ideajoin

" The ":substitute" flag 'g' is default on
" the ":substitute" flag 'g' is by default
" No need to add g at the end substitution command
" set gdefault

" Highlight matches with the current search pattern
set hlsearch

" Ignore case when searching
set ignorecase

" Makes search act like search in modern browsers
" Show where search pattern typed so far matches
set incsearch

" Pairs of characters that "%" can match
set matchpairs=(:),[:],{:},<:>

" number formats recognized for CTRL-A command
set nrformats+=alpha
set nrformats-=octal

" Use hybrid (absolute and relative) numbers
set number relativenumber

" message on status line to show current mode
set showmode

" When searching try to be smart about cases
set smartcase

" time that is waited for a mapped key sequence
set timeoutlen=500

" use visual bell instead of beeping
set visualbell

" searches wrap around the end of the file
set wrapscan

" ============================================================================
" IDE actions
" ============================================================================

nnoremap <Space> :action ExecuteInPyConsoleAction<CR>
vnoremap <Space> :action ExecuteInPyConsoleAction<CR>

nnoremap ga :action GotoAction<CR>
nnoremap gc :action GotoClass<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gf :action GotoFile<CR>
nnoremap gr :action GotoRelated<CR>
nnoremap gs :action GotoSymbol<CR>

nnoremap g; :action JumpToLastChange<CR>
nnoremap g, :action JumpToNextChange<CR>

" unimpaired-style mappings
nnoremap [<Space> O<Esc>j
nnoremap ]<Space> o<Esc>k]
nnoremap ]b :action GotoNextBookmark<CR>
nnoremap [b :action GotoPreviousBookmark<CR>
nnoremap [c :action JumpToLastChange<CR>
nnoremap ]c :action JumpToNextChange<CR>
nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>
nnoremap ]m :action MethodDown<CR>
nnoremap [m :action MethodUp<CR>
nnoremap ]o :action SelectNextOccurrence<CR>
nnoremap [o :action SelectPreviousOccurrence<CR>
nnoremap ]u :action GotoNextElementUnderCaretUsage<CR>
nnoremap [u :action GotoPrevElementUnderCaretUsage<CR>
nnoremap ]p :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorOnlyLayoutChangeAction<CR>
nnoremap [p :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorAndPreviewLayoutChangeAction<CR>
nnoremap ]P :action org.intellij.plugins.markdown.ui.actions.editorLayout.EditorOnlyLayoutChangeAction<CR>
nnoremap [P :action org.intellij.plugins.markdown.ui.actions.editorLayout.PreviewOnlyLayoutChangeAction<CR>
" Listed by EditorToggleActions
nnoremap yob :action EditorToggleShowBreadcrumbs<CR>
nnoremap yod :action ToggleDistractionFreeMode<CR>
nnoremap yog :action EditorToggleShowGutterIcons<CR>
nnoremap yoi :action EditorToggleShowIndentLines<CR>
nnoremap yon :action EditorToggleShowLineNumbers<CR>
nnoremap yop :action TogglePresentationMode<CR>
nnoremap yos :action EditorToggleShowWhitespaces<CR>
nnoremap yot :action ViewToolBar<CR>
nnoremap yow :action EditorToggleUseSoftWraps<CR>

" Backslash as leader key mappings
" Instead of ActivateCommitToolWindow, use Cmd+k and Cmd+w
nnoremap <Bslash>a :action EditorActions<CR>
nnoremap <Bslash>b :action ShowBookmarks<CR>
nnoremap <Bslash>c :action SilentCodeCleanup<CR>
nnoremap <Bslash>d :action ActivateDatabaseToolWindow<CR>
nnoremap <Bslash>e :action ActivateEventLogToolWindow<CR>
nnoremap <Bslash>f :action RenameFile<CR>
nnoremap <Bslash>g :action EditorPopupMenu.GoTo<CR>
nnoremap <Bslash>h :action LocalHistory.ShowHistory<CR>
nnoremap <Bslash>i :action GotoImplementation<CR>
nnoremap <Bslash>j :action JumpToLastWindow<CR>
nnoremap <Bslash>k :action Help.KeymapReference<CR>
nnoremap <Bslash>l :action ReformatCode<CR>
nnoremap <Bslash>m :action Move<CR>
nnoremap <Bslash>n :action ShowNavBar<CR>
nnoremap <Bslash>o :action OptimizeImports<CR>
nnoremap <Bslash>p :action ActivatePythonConsoleToolWindow<CR>
nnoremap <Bslash>q :action CloseProject<CR>
nnoremap <Bslash>r :action ActivateRConsoleToolWindow<CR>
nnoremap <Bslash>s :action ActivateSciViewToolWindow<CR>
nnoremap <Bslash>t :action ActivateTerminalToolWindow<CR>
nnoremap <Bslash>u :action Synchronize<CR>
nnoremap <Bslash>v :action Vcs.QuickListPopupAction<CR>
nnoremap <Bslash>w :action HideAllWindows<CR>
nnoremap <Bslash>x :action ChangeSplitOrientation<CR>
nnoremap <Bslash>z :action ToggleZenMode<CR>
" clear search highlighting when hitting backslash twice
nnoremap <Bslash><Bslash> :nohlsearch<CR>

" These work, you just have to do the combo very fast
nnoremap <c-w>+ :action StretchSplitToBottom<CR>
nnoremap <c-w>- :action StretchSplitToTop<CR>
nnoremap <c-w>> :action StretchSplitToRight<CR>
nnoremap <c-w>< :action StretchSplitToLeft<CR>
" <C-t> = Refactor this... now only works in normal mode
" so <C-t> can indent line in insert mode
nnoremap <C-t> :action Refactorings.QuickListPopupAction<CR>

" Emacs and bash style insert mode CTRL shortcuts
" <C-a> = Move to start of the line; like in vim command mode: c_ctrl-b; To insert previously inserted text, use <C-r>. or <Alt-.> (below)
inoremap <C-a> <Home>
" <C-b> = Move one character backward
inoremap <C-b> <Left>
" <C-d> = Delete one character forward; the opposite of <C-h>
inoremap <C-d> <Delete>
" <C-e> = Move to end of the line; the opposite of <C-a>; already exists in command mode: c_ctrl-e
inoremap <C-e> <End>
" <C-f> = Move one character forward; the opposite of <C-b>
inoremap <C-f> <Right>
" <C-h> = Delete one character backward; the opposite of <C-d>; already exists in command mode: c_ctrl-h
" <C-k> = Delete to end of line; the opposite of <C-u>
" inoremap <C-k> <C-o>:action EditorDeleteToLineEnd<CR>
" <C-n> = Complete word using matches that come next; the opposite of <C-p>
" inoremap <C-n> <C-o>:action HippieCompletion<CR>
" <C-p> = Complete word using previous matches; the opposite of <C-n>
" inoremap <C-p> <C-o>:action HippieBackwardCompletion<CR>
" <C-u> = Delete to start of line; the opposite of <C-k>; already exists in command mode: c_ctrl-u
" <C-w> = Delete word backward; opposite of <A-d>; same as <A-h>; already exists in command mode: c_ctrl-w
" <C-y> = Paste from system clipboard (not from killring like in bash/emacs)
inoremap <C-y> <C-r>+
" <C-_> = Undo like in bash/emacs (this works really well)
inoremap <C--> <C-o>u

" Emacs and bash style insert mode ALT shortcuts
" <A-b> = Move one word backward; opposite of <A-f>
inoremap <A-b> <S-Left>
" <A-d> = Delete word forward; opposite of <A-h> and <C-w>
inoremap <A-d> <C-o>:action EditorKillToWordEnd<CR>
" <A-f> = Move one word forward; opposite of <A-b>
inoremap <A-f> <S-Right>
" <A-h> = Delete word backward; opposite of <A-d>, same as <C-w>
inoremap <A-h> <C-w>
" <A-j> = Move down; opposite of <A-k>
inoremap <A-j> <Down>
" <A-k> = Move up; opposite of <A-j>
inoremap <A-k> <Up>
" <A-l> = Lowercase to word end; opposite of <A-u> (works)
inoremap <A-l> <Esc>gueea
" <A-t> = Swap current word with previous word (works)
inoremap <A-t> <Esc>diwbPldepa
" <A-u> = Uppercase to WORD end; opposite of <A-l> (does not work)
inoremap <A-u> <Esc>gUeea
